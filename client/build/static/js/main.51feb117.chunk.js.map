{"version":3,"sources":["components/Header/Header.js","utils/API.js","components/MatchBtns/MatchBtns.js","components/Cards/Cards.js","components/Thread/Thread.js","components/Messages/Messages.js","components/config/firebase.js","components/SignIn/SignIn.js","components/SignUp/SignUp.js","components/Profile/Profile.js","providers/UserProvider.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","className","to","color","idname","icon","far","axios","get","id","MatchBtns","Cards","useState","roommie","setRoommate","handleChange","event","target","key","style","useEffect","API","then","data","console","log","map","maxWidth","reverse","onChange","preventSwipe","onSwipe","cascade","height","url","name","major","description","_id","Thread","message","useParams","catch","err","mb","md","src","alt","data-holder-rendered","Messages","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","generateUserDocument","user","additionalData","a","userRef","firestore","doc","uid","exists","email","set","error","getUserDocument","userDocument","firebase","initializeApp","analytics","auth","SignIn","setEmail","password","setPassword","setError","onChangeHandler","currentTarget","value","htmlFor","type","preventDefault","signInWithEmailAndPassword","signInWithEmailAndPasswordHandler","SignUp","setName","setMajor","setDescription","createUserWithEmailAndPasswordHandler","createUserWithEmailAndPassword","Profile","useContext","UserContext","signOut","createContext","UserProvider","state","componentDidMount","onAuthStateChanged","userAuth","setState","Provider","this","props","children","Component","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.51feb117.chunk.js","sourcesContent":["import React from 'react';\nimport { MDBIcon, MDBBtn} from 'mdbreact';\nimport \"./Header.css\"\nimport { Link } from 'react-router-dom';\n\n\nfunction Header () {\n    // const hist = useHistory();\n    return (\n        <div className= \"header\">\n            {/* {returnHist ? (\n                <MDBBtn onClick= {() => hist.replaceState(returnHist)} className= \"icons\" color= \"white\" idname= \"gradIcon\"><MDBIcon icon=\"graduation-cap\" className= \"logo\" /></MDBBtn>\n            ):(\n                <MDBBtn className= \"icons\" color= \"white\" idname= \"gradIcon\"><MDBIcon icon=\"graduation-cap\" className= \"logo\" /></MDBBtn>\n            )} */}\n            <Link to= \"/\">\n            <MDBBtn className= \"icons\" color= \"white\" idname= \"gradIcon\"><MDBIcon icon=\"graduation-cap\" className= \"logo\" /></MDBBtn>\n            </Link>\n            <Link to=\"/profile\">\n            <MDBBtn  color= \"white\"  className= \"icons\"><MDBIcon far icon=\"user\" /></MDBBtn>\n            </Link>\n            <Link to= \"/message\">\n            <MDBBtn  color= \"white\" className= \"icons\"><MDBIcon far icon=\"comments\" /></MDBBtn>\n            </Link>\n        </div>\n    );\n}\n\nexport default Header; ","import axios from \"axios\"; \n\nexport default {\n\n    getRoommies: function() {\n        return axios.get(\"/api/roommies\");\n    },\n\n    getRoommie: function(id) {\n        return axios.get(\"/api/roommies/\" + id);\n    }, \n\n    saveRoomie: function(roommieData) {\n        return axios.post(\"/api/roommies\", roommieData);\n    }\n};","import React from 'react';\nimport { MDBIcon, MDBBtn} from 'mdbreact';\nimport \"./MatchBtns.css\";\n\n\n\n\nfunction MatchBtns() {\n    return(\n\n    <div className= \"MatchBtns\">\n\n        {/* <MDBBtn  color= \"rgba(0, 0, 0, 0.822)\"  className= \"icons\"><MDBIcon icon=\"times\" /></MDBBtn>\n        <MDBBtn  color= \"rgba(0, 0, 0, 0.822)\"  className= \"icons\"><MDBIcon icon=\"redo\" /></MDBBtn>  */}\n        <MDBBtn  color= \"rgba(0, 0, 0, 0.822)\"  className= \"icons\"><MDBIcon far icon=\"heart\" /></MDBBtn>\n\n    </div>\n\n    );\n}\n\nexport default MatchBtns; ","import React, { useEffect, useState}  from 'react';\nimport TinderCard from 'react-tinder-card'; \nimport API from '../../utils/API';\nimport './Cards.css';\nimport { MDBCard, MDBBtn, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBRow, MDBCol, MDBIcon } from 'mdbreact';\nimport MatchBtns from '../MatchBtns/MatchBtns';\nimport { Link } from 'react-router-dom';\n\n\nfunction Cards() {\n    const [roommie, setRoommate] = useState([])\n   \n    useEffect(() => {\n        API.getRoommies()\n        .then(data => \n            {\n                console.log(data)\n                setRoommate(data.data)\n            }\n        )\n\n      }, [])\n\n    function handleChange(event) {\n        const {key, style} = event.target;\n\n        setRoommate(roommie => {\n            return{\n                ...roommie,\n                [key]: style\n            }\n        })\n    }\n    // state = { redirect: null };\n    // render() {\n    //   if (this.state.redirect) {\n    //     return <Redirect to={this.state.redirect} />\n    //   }\n\n   \n        \nconsole.log(roommie)\n    return (\n        <div>\n            <h1 className= 'title'>U-Room</h1>\n\n            <div className= 'cardContainer'>\n\n            \n            {roommie.map((roommie => (\n                \n\n                <MDBRow>\n                <MDBCol className=\"profCard\" style={{ maxWidth: \"40rem\" }}>\n                <TinderCard className= 'rummage'>\n                    <MDBCard reverse  onChange= {handleChange} preventSwipe= {['up', 'down']} onSwipe={['right']} key= {roommie._id}>\n                        <MDBCardImage cascade className=\"img\" style={{ height: '20rem' }} className= 'roommieCard' onChange= {handleChange}  src={roommie.url}/>\n                        <MDBCardBody cascade className=\"text-center\">\n                            <MDBCardTitle>{roommie.name}</MDBCardTitle>\n                            <h5 className=\"indigo-text\"><strong>{roommie.major}</strong></h5>\n                            <MDBCardText>{roommie.description}</MDBCardText>\n                            {/* <Link to={\"/roommies/\" + roommie._id}><MDBBtn><MDBIcon far icon=\"heart\" /></MDBBtn></Link> */}\n\n                        </MDBCardBody>\n                    </MDBCard>\n                    </TinderCard>\n                </MDBCol>\n            </MDBRow>\n\n         \n\n                // <TinderCard className= 'rummage' onChange= {handleChange} preventSwipe= {['up', 'down']} key= {roommie.name} >\n                //     <div className= 'roommieCard' onChange= {handleChange}  style= {{backgroundImage: `url(${roommie.url})`}}>\n\n                //         <h2>{roommie.name}</h2>\n                //         <h3>{roommie.major}</h3>\n                //         <p>{roommie.description}</p>\n                //     </div>\n\n                // </TinderCard>\n)))}\n         \n             </div>\n            \n             <Link to={\"/roommies/\" + roommie._id}>< MatchBtns /></Link>\n        </div>\n       \n        \n   \n    )\n   \n}\n\nexport default Cards; \n\n     \n     ","import React, { useEffect, useState}  from \"react\";\nimport { MDBCol} from 'mdbreact';\nimport API from '../../utils/API';\nimport \"./Thread.css\";\nimport { useParams } from \"react-router\";\n\nfunction Thread({message}) {\n    const [roommie, setRoommate] = useState({})\n   const {id} = useParams()\n   \n//    useEffect(() => {\n//     if (id) {\n//       API.getRoommie(id).then(data => setRoommate(data.data)).catch(err => console.log(err));\n//     }\n// }, [])\n    useEffect(() => {\n        \n        API.getRoommie(id)\n        .then(data => setRoommate(data.data))\n        .catch(err => console.log(err));\n        \n\n      }, [])\n\n    // function handleChange(event) {\n    //     const {key, style} = event.target;\n\n    //     setRoommate(roommie => {\n    //         return{\n    //             ...roommie,\n    //             [key]: style\n    //         }\n    //     })\n    // }\n    return (\n        <div>\n        {/* {roommie.map((roommie => ( */}\n\n        <div className=\"thread\">\n            <div className=\"row\">\n            <MDBCol mb=\"1\" md=\"1\" className=\"mb-3 text-center\">\n            <img src={roommie.url} className=\"rounded-circle\" alt={roommie.name} data-holder-rendered=\"true\"/>\n          </MDBCol></div>\n          <div className=\"row\">\n          <div className= \"convo_needs\">\n              <h3 className= \"name\">{roommie.name}</h3>\n              <p className= \"message\">{message}</p>\n          </div>\n         </div>\n\n        </div>\n\n    {/* ) */}\n    {/* )) */}\n{/* } */}\n  </div>\n    )\n}\n\nexport default Thread;","import React from \"react\";\nimport \"./Messages.css\";\nimport Thread from  \"../Thread/Thread\";\n\nfunction Messages() {\n    return (\n    <div className= \"messages\">\n        <Thread\n            name= \"Mark Zee\"\n            message= \"Hey!\"\n            url= \"https://www.ft.com/__origami/service/image/v2/images/raw/http%3A%2F%2Fcom.ft.imagepublish.upp-prod-us.s3.amazonaws.com%2Fb70c5e96-58b7-11ea-abe5-8e03987b7b20?source=google-amp&fit=scale-down&width=500\"\n            />\n        <Thread\n            name= \"Patrick Bateman\"\n            message= \"Hello, let's compare business cards..\"\n            url= \"https://upload.wikimedia.org/wikipedia/en/5/52/American-psycho-patrick-bateman.jpg\"\n            />\n    </div>\n    )\n};\n\nexport default Messages;","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport 'firebase/analytics';\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAtVu0kYqPxytXxBkzt_JUZGvRQpe_FM7k\",\n    authDomain: \"u-room.firebaseapp.com\",\n    projectId: \"u-room\",\n    storageBucket: \"u-room.appspot.com\",\n    messagingSenderId: \"567130453370\",\n    appId: \"1:567130453370:web:8bf8505d7ddac89390d2c3\",\n    measurementId: \"G-37CM4RX79C\"\n};\n\n\n\nexport const generateUserDocument = async (user, additionalData) => {\n    if (!user) return;\n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n    if (!snapshot.exists) {\n      const { email, name, url } = user;\n      try {\n        await userRef.set({\n          name,\n          email,\n          url,\n          ...additionalData\n        });\n      } catch (error) {\n        console.error(\"Error creating user document\", error);\n      }\n    }\n    return getUserDocument(user.uid);\n  };\n  const getUserDocument = async uid => {\n    if (!uid) return null;\n    try {\n      const userDocument = await firestore.doc(`users/${uid}`).get();\n      return {\n        uid,\n        ...userDocument.data()\n      };\n    } catch (error) {\n      console.error(\"Error fetching user\", error);\n    }\n  };\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport default firebaseConfig;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBCard,\n    MDBCardBody,\n    MDBModalFooter,\n    MDBIcon,\n    MDBCardHeader,\n    MDBBtn\n} from \"mdbreact\";\nimport \"./SignIn.css\";\nimport { auth } from \"../config/firebase\"; \n\n\nconst SignIn = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(null);\n    const signInWithEmailAndPasswordHandler = (event, email, password) => {\n        event.preventDefault();\n        auth.signInWithEmailAndPassword(email, password).catch(error => {\n          setError(\"Error signing in with password and email!\");\n          console.error(\"Error signing in with password and email\", error);\n        });\n      };\n\n    const onChangeHandler = (event) => {\n        const { name, value } = event.currentTarget;\n\n        if (name === \"userEmail\") {\n            setEmail(value);\n        }\n        else if (name === \"userPassword\") {\n            setPassword(value);\n        }\n    };\n\n    return (\n        <div>\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <MDBCard className=\"signInCard\">\n                            <MDBCardBody>\n                                <MDBCardHeader className=\"cardHeader\" className=\"form-header bg-dark rounded\" color=\"#263238\" >\n                                    <h3 className=\"my-3\">\n                                        <MDBIcon className=\"log\" icon=\"lock\" /> Login:\n                </h3>\n                                </MDBCardHeader>\n                                <label\n                                    htmlFor=\"defaultFormEmailEx\"\n                                    className=\"grey-text font-weight-light\" className=\"userEmail\"\n                                >\n                                    Email\n              </label>\n                                <input\n                                    type=\"email\"\n                                    id=\"defaultFormEmailEx\"\n                                    name=\"userEmail\"\n                                    value={email}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n\n                                <label\n                                    htmlFor=\"defaultFormPasswordEx\"\n                                    className=\"grey-text font-weight-light\"\n                                >\n                                    Password\n              </label>\n                                <input\n                                    type=\"password\"\n                                    id=\"defaultFormPasswordEx\"\n                                    name=\"userPassword\"\n                                    value={password}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n\n                                <div className=\"text-center mt-4\">\n                                    <Link to=\"/myprofile\">\n                                    <MDBBtn color=\"dark\" className=\"mb-3\" className=\"bg-dark\" type=\"submit\" onClick={(event) => { signInWithEmailAndPasswordHandler(event, email, password) }}>\n                                        Login\n                </MDBBtn></Link>\n                                </div>\n\n                                <MDBModalFooter>\n                                    <div className=\"font-weight-light\">\n                                        <p>Not a member?</p>\n                                        <Link to=\"/SignUp\" className=\"text-blue-500 hover:text-blue-600\">\n                                            Sign up here\n          </Link>\n\n                                    </div>\n                                </MDBModalFooter>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n\n\n        </div>\n    )\n}\n\nexport default SignIn;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBCard,\n    MDBCardBody,\n    MDBModalFooter,\n    MDBIcon,\n    MDBCardHeader,\n    MDBBtn\n} from \"mdbreact\";\nimport { auth, generateUserDocument } from \"../config/firebase\"; \n\nconst SignUp = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [major, setMajor] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [error, setError] = useState(null);\n\n    const createUserWithEmailAndPasswordHandler = async (event, email, password, major, description) => {\n        event.preventDefault();\n        try{\n          const {user} = await auth.createUserWithEmailAndPassword(email, password, major, description);\n          generateUserDocument(user, {name});\n        }\n        catch(error){\n          setError('Error Signing up with email and password');\n        }\n    \n        setEmail(\"\");\n        setPassword(\"\");\n        setName(\"\");\n        setMajor(\"\");\n        setDescription(\"\");\n      };\n    const onChangeHandler = event => {\n        const { name, value } = event.currentTarget;\n        if (name === \"userEmail\") {\n            setEmail(value);\n        } else if (name === \"userPassword\") {\n            setPassword(value);\n        } else if (name === \"name\") {\n            setName(value);\n        } else if (name === \"userMajor\") {\n            setMajor(value);\n        } else if (name === \"userDescription\"){\n            setDescription(value)\n        }\n    };\n    return (\n        <div>\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <MDBCard className=\"signUpCard\">\n                            <MDBCardBody>\n                                <MDBCardHeader className=\"cardHeader\" className=\"form-header bg-dark rounded\" color=\"#263238\" >\n                                    <h3 className=\"my-3\">\n                                        <MDBIcon className=\"log\" icon=\"lock\" /> Sign Up:\n                </h3>\n                                </MDBCardHeader>\n                                <label\n                                    htmlFor=\"defaultFormEmailEx\"\n                                    className=\"grey-text font-weight-light\" className=\"name\"\n                                >\n                                    Name\n              </label>\n                                <input\n                                    type=\"name\"\n                                    id=\"defaultFormEmailEx\"\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n                                <label\n                                    htmlFor=\"defaultFormEmailEx\"\n                                    className=\"grey-text font-weight-light\" className=\"userEmail\"\n                                >\n                                    Email\n              </label>\n                                <input\n                                    type=\"email\"\n                                    id=\"defaultFormEmailEx\"\n                                    name=\"userEmail\"\n                                    value={email}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n\n                                <label\n                                    htmlFor=\"defaultFormPasswordEx\"\n                                    className=\"grey-text font-weight-light\"\n                                >\n                                    Password\n              </label>\n                                <input\n                                    type=\"password\"\n                                    id=\"defaultFormPasswordEx\"\n                                    name=\"userPassword\"\n                                    value={password}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n\n<label\n                                    htmlFor=\"defaultFormPasswordEx\"\n                                    className=\"grey-text font-weight-light\"\n                                >\n                                    Major\n              </label>\n                                <input\n                                    type=\"major\"\n                                    id=\"defaultFormEmailEx\"\n                                    name=\"userMajor\"\n                                    value={major}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n                                 <label\n                                    htmlFor=\"defaultFormPasswordEx\"\n                                    className=\"grey-text font-weight-light\"\n                                >\n                                    Description\n              </label>\n                                <input\n                                    type=\"description\"\n                                    id=\"defaultFormEmailEx\"\n                                    name=\"userDescription\"\n                                    value={description}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n\n                                <div className=\"text-center mt-4\">\n                                  <Link to=\"/myprofile\"><MDBBtn color=\"dark\" className=\"mb-3\" className=\"bg-dark\" type=\"submit\" onClick={(event) => { createUserWithEmailAndPasswordHandler(event, email, password) }}>\n                                        Login\n                </MDBBtn></Link> \n                                </div>\n\n                                <MDBModalFooter>\n                                    <div className=\"font-weight-light\">\n                                        <p>Already a member?{\"\"}</p>\n                                        <Link to=\"/profile\" className=\"text-blue-500 hover:text-blue-600\">\n                                            Sign in here!\n          </Link>\n\n                                    </div>\n                                </MDBModalFooter>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        </div>\n    )\n}\n\nexport default SignUp; \n","import React,  {useContext, UserContext} from \"react\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBRow, MDBCol } from 'mdbreact';\nimport \"./Profile.css\";\nimport { auth } from \"../config/firebase\";\nimport { Link } from 'react-router-dom';\n\nconst Profile = () => {\n    const user = useContext(UserContext);\n    const { url, name, email, major, description } = user;\n    return (\n        <div>\n            <MDBRow>\n                <MDBCol className=\"profCard\" style={{ maxWidth: \"40rem\" }}>\n                    <MDBCard reverse>\n                        <MDBCardImage cascade className=\"img\" style={{ height: '20rem' }} src=\"https://atlantablackstar.com/wp-content/uploads/2016/08/malia-obama_ozv0ql.jpg\" />\n                        <MDBCardBody cascade className=\"text-center\">\n                            <MDBCardTitle>{name}</MDBCardTitle>\n                            <h5 className=\"indigo-text\"><strong>{major}</strong></h5>\n                            <MDBCardText>{description}</MDBCardText>\n                            <div className=\"text-center mt-4\">\n                                <Link to=\"/SignUp\">\n                                    <MDBBtn color=\"dark\" className=\"mb-3\" className=\"bg-dark\" type=\"submit\" onClick= {() => {auth.signOut()}}>\n                                        Sign Out\n                </MDBBtn></Link>\n                            </div>\n                        </MDBCardBody>\n                    </MDBCard>\n                </MDBCol>\n            </MDBRow>\n\n        </div>\n    )\n}\n\nexport default Profile;","import React, { Component, createContext } from \"react\";\nimport { auth, generateUserDocument } from \"../components/config/firebase\"; \n\n\nexport const UserContext = createContext({ user: null });\nclass UserProvider extends Component {\n    state = {\n      user: null\n    };\n  \n    componentDidMount = async () => {\n        auth.onAuthStateChanged(async userAuth => {\n          const user = await generateUserDocument(userAuth);\n          this.setState({ user });\n        });\n    };\n    render() {\n      return (\n        <UserContext.Provider value={this.state.user}>\n          {this.props.children}\n        </UserContext.Provider>\n      );\n    }\n  }\n  export default UserProvider;","import './App.css';\nimport Header from './components/Header/Header';\nimport Cards from './components/Cards/Cards';\nimport Messages from './components/Messages/Messages';\n// import MatchBtns from './components/MatchBtns/MatchBtns';\nimport SignIn from './components/SignIn/SignIn';\nimport SignUp from './components/SignUp/SignUp';\nimport Profile from './components/Profile/Profile';\nimport UserProvider from \"./providers/UserProvider\";\nimport Thread from './components/Thread/Thread';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const user = null;\n  return (\n    <div className=\"App\">\n\n      <Router>\n        <Header />\n        <header className=\"App-header\">\n          <Switch>\n          <Route exact path=\"/\">\n              <Cards />\n             \n            </Route>\n            <Route path=\"/message\">\n              <Messages />\n            </Route>\n            <Route path=\"/roommies/:id\">\n              <Thread />\n            </Route>\n            <UserProvider>\n            <Route path=\"/myprofile\">\n            <Profile />\n            </Route>\n            <Route path=\"/profile\">\n              <SignIn />\n            </Route>\n            <Route path=\"/SignUp\">\n              <SignUp />\n            </Route> \n              </UserProvider>\n              \n            {/* homepage route always at the bottom */}\n          </Switch>\n        </header>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n// import * as serviceWorker from './serviceWorker';\n// import Firebase, { FirebaseContext } from './components/config/firebase';\nimport registerServiceWorker from './registerServiceWorker';\n \n// ReactDOM.render(\n//   <FirebaseContext.Provider value={new Firebase()}>\n//     <App />\n//   </FirebaseContext.Provider>,\n//   document.getElementById('root'),\n// );\n \n// serviceWorker.unregister();\n\n\n\nReactDOM.render( <App /> , document.getElementById('root'));\n\nregisterServiceWorker();\n\n"],"sourceRoot":""}