[{"/Users/tajahjohnson/u-room/client/src/index.js":"1","/Users/tajahjohnson/u-room/client/src/registerServiceWorker.js":"2","/Users/tajahjohnson/u-room/client/src/App.js":"3","/Users/tajahjohnson/u-room/client/src/components/Cards/Cards.js":"4","/Users/tajahjohnson/u-room/client/src/components/Header/Header.js":"5","/Users/tajahjohnson/u-room/client/src/utils/API.js":"6","/Users/tajahjohnson/u-room/client/src/components/MatchBtns/MatchBtns.js":"7","/Users/tajahjohnson/u-room/client/src/components/Messages/Messages.js":"8","/Users/tajahjohnson/u-room/client/src/components/Thread/Thread.js":"9","/Users/tajahjohnson/u-room/client/src/components/SignIn/SignIn.js":"10","/Users/tajahjohnson/u-room/client/src/components/SignUp/SignUp.js":"11","/Users/tajahjohnson/u-room/client/src/components/Profile/Profile.js":"12","/Users/tajahjohnson/u-room/client/src/providers/UserProvider.js":"13"},{"size":403,"mtime":1608398241123,"results":"14","hashOfConfig":"15"},{"size":4130,"mtime":1608398241125,"results":"16","hashOfConfig":"15"},{"size":1351,"mtime":1608520330696,"results":"17","hashOfConfig":"15"},{"size":1236,"mtime":1608442980194,"results":"18","hashOfConfig":"15"},{"size":1164,"mtime":1608501874535,"results":"19","hashOfConfig":"15"},{"size":322,"mtime":1608406014327,"results":"20","hashOfConfig":"15"},{"size":522,"mtime":1608446750918,"results":"21","hashOfConfig":"15"},{"size":743,"mtime":1608454476452,"results":"22","hashOfConfig":"15"},{"size":556,"mtime":1608458274747,"results":"23","hashOfConfig":"15"},{"size":3879,"mtime":1608509200727,"results":"24","hashOfConfig":"15"},{"size":4730,"mtime":1608509557410,"results":"25","hashOfConfig":"15"},{"size":1005,"mtime":1608518526383,"results":"26","hashOfConfig":"15"},{"size":574,"mtime":1608520612048,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ihy9jn",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tajahjohnson/u-room/client/src/index.js",[],["62","63"],"/Users/tajahjohnson/u-room/client/src/registerServiceWorker.js",[],"/Users/tajahjohnson/u-room/client/src/App.js",["64"],"import './App.css';\nimport Header from './components/Header/Header';\nimport Cards from './components/Cards/Cards';\nimport Messages from './components/Messages/Messages';\nimport MatchBtns from './components/MatchBtns/MatchBtns';\nimport SignIn from './components/SignIn/SignIn';\nimport SignUp from './components/SignUp/SignUp';\nimport Profile from './components/Profile/Profile';\nimport UserProvider from \"./providers/UserProvider\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const user = null;\n  return (\n    <div className=\"App\">\n\n      <Router>\n        <Header returnHist=\"/\" />\n        <header className=\"App-header\">\n          <Switch>\n            <Route path=\"/message\">\n              <Messages />\n            </Route>\n            <UserProvider>\n              \n            user ?\n            <Profile />\n            :\n            <Route path=\"/profile\">\n              <SignIn />\n\n            </Route>\n            <Route path=\"/SignUp\">\n              <SignUp />\n              </Route> \n              </UserProvider>\n\n            \n            {/* homepage route always at the bottom */}\n            <Route path=\"/\">\n              \n              <Cards />\n              <MatchBtns />\n            </Route>\n          </Switch>\n        </header>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","/Users/tajahjohnson/u-room/client/src/components/Cards/Cards.js",["65","66","67"],"import { Mongoose, MongooseDocument } from 'mongoose';\nimport React, { useEffect, useState}  from 'react';\nimport TinderCard from 'react-tinder-card'; \nimport API from '../../utils/API';\nimport './Cards.css';\n\n\n\nfunction Cards () {\n    const [roommie, setRoommate] = useState([])\n\n    useEffect(() => {\n        API.getRoommies()\n        .then(data => \n            setRoommate(data))\n      }, [])\n\n    function handleChange(event) {\n        const {key, style} = event.target;\n\n        setRoommate(roommie => {\n            return{\n                ...roommie,\n                [key]: style\n            }\n        })\n    }\n\n\n\n    return (\n        <div>\n            <h1 className= 'title'>U-Room</h1>\n\n            <div className= 'cardContainer'>\n\n          \n            {roommie.map((roommie => {\n                <TinderCard className= 'rummage' onChange= {handleChange} preventSwipe= {['up', 'down']} key= {roommie.name} >\n                    <div className= 'roommieCard' onChange= {handleChange}  style= {{backgroundImage: `url(${roommie.url})`}}>\n\n                        <h2>{roommie.name}</h2>\n                    </div>\n\n                </TinderCard>\n}))}\n           \n             </div>\n\n        </div>\n    )\n}\n\nexport default Cards; ","/Users/tajahjohnson/u-room/client/src/components/Header/Header.js",["68"],"import React from 'react';\nimport { MDBIcon, MDBBtn} from 'mdbreact';\nimport \"./Header.css\"\nimport { Link, useHistory } from 'react-router-dom';\n\n\nfunction Header () {\n    // const hist = useHistory();\n    return (\n        <div className= \"header\">\n            {/* {returnHist ? (\n                <MDBBtn onClick= {() => hist.replaceState(returnHist)} className= \"icons\" color= \"white\" idname= \"gradIcon\"><MDBIcon icon=\"graduation-cap\" className= \"logo\" /></MDBBtn>\n            ):(\n                <MDBBtn className= \"icons\" color= \"white\" idname= \"gradIcon\"><MDBIcon icon=\"graduation-cap\" className= \"logo\" /></MDBBtn>\n            )} */}\n            <Link to= \"/\">\n            <MDBBtn className= \"icons\" color= \"white\" idname= \"gradIcon\"><MDBIcon icon=\"graduation-cap\" className= \"logo\" /></MDBBtn>\n            </Link>\n            <Link to=\"/profile\">\n            <MDBBtn  color= \"white\"  className= \"icons\"><MDBIcon far icon=\"user\" /></MDBBtn>\n            </Link>\n            <Link to= \"/message\">\n            <MDBBtn  color= \"white\" className= \"icons\"><MDBIcon far icon=\"comments\" /></MDBBtn>\n            </Link>\n        </div>\n    );\n}\n\nexport default Header; ","/Users/tajahjohnson/u-room/client/src/utils/API.js",["69"],"import axios from \"axios\"; \n\nexport default {\n\n    getRoommies: function() {\n        return axios.get(\"/api/roommies\");\n    },\n\n    getRoommie: function(id) {\n        return axios.get(\"/api/roommies/\" + id);\n    }, \n\n    saveRoomie: function(roommieData) {\n        return axios.post(\"/api/roommies\", roommieData);\n    }\n};","/Users/tajahjohnson/u-room/client/src/components/MatchBtns/MatchBtns.js",[],"/Users/tajahjohnson/u-room/client/src/components/Messages/Messages.js",[],"/Users/tajahjohnson/u-room/client/src/components/Thread/Thread.js",[],"/Users/tajahjohnson/u-room/client/src/components/SignIn/SignIn.js",["70","71","72","73","74"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBCard,\n    MDBCardBody,\n    MDBModalFooter,\n    MDBIcon,\n    MDBCardHeader,\n    MDBBtn\n} from \"mdbreact\";\nimport \"./SignIn.css\";\n\n\nconst SignIn = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(null);\n    const signInWithCredentialsHandler =\n        (event, email, password) => {\n            event.preventDefault();\n        };\n\n    const onChangeHandler = (event) => {\n        const { name, value } = event.currentTarget;\n\n        if (name === \"userEmail\") {\n            setEmail(value);\n        }\n        else if (name === \"userPassword\") {\n            setPassword(value);\n        }\n    };\n\n    return (\n        <div>\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <MDBCard className=\"signInCard\">\n                            <MDBCardBody>\n                                <MDBCardHeader className=\"cardHeader\" className=\"form-header bg-dark rounded\" color=\"#263238\" >\n                                    <h3 className=\"my-3\">\n                                        <MDBIcon className=\"log\" icon=\"lock\" /> Login:\n                </h3>\n                                </MDBCardHeader>\n                                <label\n                                    htmlFor=\"defaultFormEmailEx\"\n                                    className=\"grey-text font-weight-light\" className=\"userEmail\"\n                                >\n                                    Email\n              </label>\n                                <input\n                                    type=\"email\"\n                                    id=\"defaultFormEmailEx\"\n                                    name=\"userEmail\"\n                                    value={email}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n\n                                <label\n                                    htmlFor=\"defaultFormPasswordEx\"\n                                    className=\"grey-text font-weight-light\"\n                                >\n                                    Password\n              </label>\n                                <input\n                                    type=\"password\"\n                                    id=\"defaultFormPasswordEx\"\n                                    name=\"userPassword\"\n                                    value={password}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n\n                                <div className=\"text-center mt-4\">\n                                    <MDBBtn color=\"dark\" className=\"mb-3\" className=\"bg-dark\" type=\"submit\" onClick={(event) => { signInWithCredentialsHandler(event, email, password) }}>\n                                        Login\n                </MDBBtn>\n                                </div>\n\n                                <MDBModalFooter>\n                                    <div className=\"font-weight-light\">\n                                        <p>Not a member? Sign Up</p>\n                                        <Link to=\"/SignUp\" className=\"text-blue-500 hover:text-blue-600\">\n                                            Sign up here\n          </Link>\n\n                                    </div>\n                                </MDBModalFooter>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n\n\n        </div>\n    )\n}\n\nexport default SignIn;","/Users/tajahjohnson/u-room/client/src/components/SignUp/SignUp.js",["75","76","77","78","79","80"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBCard,\n    MDBCardBody,\n    MDBModalFooter,\n    MDBIcon,\n    MDBCardHeader,\n    MDBBtn\n} from \"mdbreact\";\n\nconst SignUp = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [error, setError] = useState(null);\n    const createUserWithCredentialsHandler = (event, email, password) => {\n        event.preventDefault();\n        setEmail(\"\");\n        setPassword(\"\");\n        setName(\"\");\n    };\n    const onChangeHandler = event => {\n        const { name, value } = event.currentTarget;\n        if (name === \"userEmail\") {\n            setEmail(value);\n        } else if (name === \"userPassword\") {\n            setPassword(value);\n        } else if (name === \"name\") {\n            setName(value);\n        }\n    };\n    return (\n        <div>\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <MDBCard className=\"signUpCard\">\n                            <MDBCardBody>\n                                <MDBCardHeader className=\"cardHeader\" className=\"form-header bg-dark rounded\" color=\"#263238\" >\n                                    <h3 className=\"my-3\">\n                                        <MDBIcon className=\"log\" icon=\"lock\" /> Sign Up:\n                </h3>\n                                </MDBCardHeader>\n                                <label\n                                    htmlFor=\"defaultFormEmailEx\"\n                                    className=\"grey-text font-weight-light\" className=\"name\"\n                                >\n                                    Name\n              </label>\n                                <input\n                                    type=\"name\"\n                                    id=\"defaultFormEmailEx\"\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n                                <label\n                                    htmlFor=\"defaultFormEmailEx\"\n                                    className=\"grey-text font-weight-light\" className=\"userEmail\"\n                                >\n                                    Email\n              </label>\n                                <input\n                                    type=\"email\"\n                                    id=\"defaultFormEmailEx\"\n                                    name=\"userEmail\"\n                                    value={email}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n\n                                <label\n                                    htmlFor=\"defaultFormPasswordEx\"\n                                    className=\"grey-text font-weight-light\"\n                                >\n                                    Password\n              </label>\n                                <input\n                                    type=\"password\"\n                                    id=\"defaultFormPasswordEx\"\n                                    name=\"userPassword\"\n                                    value={password}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n\n                                <div className=\"text-center mt-4\">\n                                    <MDBBtn color=\"dark\" className=\"mb-3\" className=\"bg-dark\" type=\"submit\" onClick={(event) => { createUserWithCredentialsHandler(event, email, password) }}>\n                                        Login\n                </MDBBtn>\n                                </div>\n\n                                <MDBModalFooter>\n                                    <div className=\"font-weight-light\">\n                                        <p>Already a member?{\"\"}</p>\n                                        <Link to=\"/profile\" className=\"text-blue-500 hover:text-blue-600\">\n                                            Sign in here!\n          </Link>\n\n                                    </div>\n                                </MDBModalFooter>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        </div>\n    )\n}\n\nexport default SignUp; \n","/Users/tajahjohnson/u-room/client/src/components/Profile/Profile.js",["81"],"import React from \"react\";\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBRow, MDBCol, MDBIcon } from 'mdbreact';\nimport \"./Profile.css\";\n\nconst Profile = () => {\n    return (\n        <div>\n    <MDBRow>\n      <MDBCol className= \"profCard\" style={{ maxWidth: \"40rem\" }}>\n        <MDBCard reverse>\n          <MDBCardImage cascade className=\"img\" style={{ height: '20rem' }} src=\"https://atlantablackstar.com/wp-content/uploads/2016/08/malia-obama_ozv0ql.jpg\" />\n          <MDBCardBody cascade className=\"text-center\">\n            <MDBCardTitle>Malia O.</MDBCardTitle>\n            <h5 className=\"indigo-text\"><strong>Sociology</strong></h5>\n            <MDBCardText>Hey! I'm looking for a roommate who's trustworthy and respects the privacy of others. Also, you must be cool with Secret Service agents monitoring you when I'm around. &#128579;</MDBCardText>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBCol>\n    </MDBRow>\n\n        </div>\n    )\n}\n\nexport default Profile;","/Users/tajahjohnson/u-room/client/src/providers/UserProvider.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":14,"column":9,"nodeType":"88","messageId":"89","endLine":14,"endColumn":13},{"ruleId":"86","severity":1,"message":"90","line":1,"column":10,"nodeType":"88","messageId":"89","endLine":1,"endColumn":18},{"ruleId":"86","severity":1,"message":"91","line":1,"column":20,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":38,"column":35,"nodeType":"94","messageId":"95","endLine":38,"endColumn":37},{"ruleId":"86","severity":1,"message":"96","line":4,"column":16,"nodeType":"88","messageId":"89","endLine":4,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":3,"column":1,"nodeType":"99","endLine":16,"endColumn":3},{"ruleId":"86","severity":1,"message":"100","line":20,"column":12,"nodeType":"88","messageId":"89","endLine":20,"endColumn":17},{"ruleId":"86","severity":1,"message":"101","line":20,"column":19,"nodeType":"88","messageId":"89","endLine":20,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":44,"column":71,"nodeType":"104","endLine":44,"endColumn":110},{"ruleId":"102","severity":1,"message":"103","line":51,"column":77,"nodeType":"104","endLine":51,"endColumn":98},{"ruleId":"102","severity":1,"message":"103","line":80,"column":75,"nodeType":"104","endLine":80,"endColumn":94},{"ruleId":"86","severity":1,"message":"100","line":19,"column":12,"nodeType":"88","messageId":"89","endLine":19,"endColumn":17},{"ruleId":"86","severity":1,"message":"101","line":19,"column":19,"nodeType":"88","messageId":"89","endLine":19,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":43,"column":71,"nodeType":"104","endLine":43,"endColumn":110},{"ruleId":"102","severity":1,"message":"103","line":50,"column":77,"nodeType":"104","endLine":50,"endColumn":93},{"ruleId":"102","severity":1,"message":"103","line":64,"column":77,"nodeType":"104","endLine":64,"endColumn":98},{"ruleId":"102","severity":1,"message":"103","line":93,"column":75,"nodeType":"104","endLine":93,"endColumn":94},{"ruleId":"86","severity":1,"message":"105","line":2,"column":89,"nodeType":"88","messageId":"89","endLine":2,"endColumn":96},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'Mongoose' is defined but never used.","'MongooseDocument' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useHistory' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'MDBIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]