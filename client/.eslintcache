[{"/Users/tajahjohnson/u-room/client/src/index.js":"1","/Users/tajahjohnson/u-room/client/src/registerServiceWorker.js":"2","/Users/tajahjohnson/u-room/client/src/App.js":"3","/Users/tajahjohnson/u-room/client/src/components/Cards/Cards.js":"4","/Users/tajahjohnson/u-room/client/src/components/Header/Header.js":"5","/Users/tajahjohnson/u-room/client/src/utils/API.js":"6","/Users/tajahjohnson/u-room/client/src/components/MatchBtns/MatchBtns.js":"7","/Users/tajahjohnson/u-room/client/src/components/Messages/Messages.js":"8","/Users/tajahjohnson/u-room/client/src/components/Thread/Thread.js":"9","/Users/tajahjohnson/u-room/client/src/components/SignIn/SignIn.js":"10","/Users/tajahjohnson/u-room/client/src/components/SignUp/SignUp.js":"11","/Users/tajahjohnson/u-room/client/src/components/Profile/Profile.js":"12","/Users/tajahjohnson/u-room/client/src/providers/UserProvider.js":"13","/Users/tajahjohnson/u-room/client/src/components/config/firebase.js":"14"},{"size":736,"mtime":1608522331541,"results":"15","hashOfConfig":"16"},{"size":4130,"mtime":1608398241125,"results":"17","hashOfConfig":"16"},{"size":1458,"mtime":1608657628635,"results":"18","hashOfConfig":"16"},{"size":2978,"mtime":1608660684460,"results":"19","hashOfConfig":"16"},{"size":1152,"mtime":1608654897740,"results":"20","hashOfConfig":"16"},{"size":322,"mtime":1608406014327,"results":"21","hashOfConfig":"16"},{"size":534,"mtime":1608657651968,"results":"22","hashOfConfig":"16"},{"size":743,"mtime":1608454476452,"results":"23","hashOfConfig":"16"},{"size":1518,"mtime":1608665664549,"results":"24","hashOfConfig":"16"},{"size":4204,"mtime":1608532553264,"results":"25","hashOfConfig":"16"},{"size":6856,"mtime":1608653891008,"results":"26","hashOfConfig":"16"},{"size":1573,"mtime":1608655163965,"results":"27","hashOfConfig":"16"},{"size":677,"mtime":1608526387700,"results":"28","hashOfConfig":"16"},{"size":1473,"mtime":1608524336388,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ihy9jn",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/tajahjohnson/u-room/client/src/index.js",[],["66","67"],"/Users/tajahjohnson/u-room/client/src/registerServiceWorker.js",[],"/Users/tajahjohnson/u-room/client/src/App.js",["68"],"import './App.css';\nimport Header from './components/Header/Header';\nimport Cards from './components/Cards/Cards';\nimport Messages from './components/Messages/Messages';\n// import MatchBtns from './components/MatchBtns/MatchBtns';\nimport SignIn from './components/SignIn/SignIn';\nimport SignUp from './components/SignUp/SignUp';\nimport Profile from './components/Profile/Profile';\nimport UserProvider from \"./providers/UserProvider\";\nimport Thread from './components/Thread/Thread';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const user = null;\n  return (\n    <div className=\"App\">\n\n      <Router>\n        <Header />\n        <header className=\"App-header\">\n          <Switch>\n          <Route exact path=\"/\">\n              <Cards />\n             \n            </Route>\n            <Route path=\"/message\">\n              <Messages />\n            </Route>\n            <Route path=\"/roommies/:id\">\n              <Thread />\n            </Route>\n            <UserProvider>\n            <Route path=\"/myprofile\">\n            <Profile />\n            </Route>\n            <Route path=\"/profile\">\n              <SignIn />\n            </Route>\n            <Route path=\"/SignUp\">\n              <SignUp />\n            </Route> \n              </UserProvider>\n              \n            {/* homepage route always at the bottom */}\n          </Switch>\n        </header>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","/Users/tajahjohnson/u-room/client/src/components/Cards/Cards.js",["69","70","71"],"import React, { useEffect, useState}  from 'react';\nimport TinderCard from 'react-tinder-card'; \nimport API from '../../utils/API';\nimport './Cards.css';\nimport { MDBCard, MDBBtn, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBRow, MDBCol, MDBIcon } from 'mdbreact';\nimport MatchBtns from '../MatchBtns/MatchBtns';\nimport { Link } from 'react-router-dom';\n\n\nfunction Cards() {\n    const [roommie, setRoommate] = useState([])\n   \n    useEffect(() => {\n        API.getRoommies()\n        .then(data => \n            {\n                console.log(data)\n                setRoommate(data.data)\n            }\n        )\n\n      }, [])\n\n    function handleChange(event) {\n        const {key, style} = event.target;\n\n        setRoommate(roommie => {\n            return{\n                ...roommie,\n                [key]: style\n            }\n        })\n    }\n    // state = { redirect: null };\n    // render() {\n    //   if (this.state.redirect) {\n    //     return <Redirect to={this.state.redirect} />\n    //   }\n\n   \n        \nconsole.log(roommie)\n    return (\n        <div>\n            <h1 className= 'title'>U-Room</h1>\n\n            <div className= 'cardContainer'>\n\n            \n            {roommie.map((roommie => (\n                \n\n                <MDBRow>\n                <MDBCol className=\"profCard\" style={{ maxWidth: \"40rem\" }}>\n                <TinderCard className= 'rummage'>\n                    <MDBCard reverse  onChange= {handleChange} preventSwipe= {['up', 'down']} onSwipe={['right']} key= {roommie._id}>\n                        <MDBCardImage cascade className=\"img\" style={{ height: '20rem' }} className= 'roommieCard' onChange= {handleChange}  src={roommie.url}/>\n                        <MDBCardBody cascade className=\"text-center\">\n                            <MDBCardTitle>{roommie.name}</MDBCardTitle>\n                            <h5 className=\"indigo-text\"><strong>{roommie.major}</strong></h5>\n                            <MDBCardText>{roommie.description}</MDBCardText>\n                            {/* <Link to={\"/roommies/\" + roommie._id}><MDBBtn><MDBIcon far icon=\"heart\" /></MDBBtn></Link> */}\n\n                        </MDBCardBody>\n                    </MDBCard>\n                    </TinderCard>\n                </MDBCol>\n            </MDBRow>\n\n         \n\n                // <TinderCard className= 'rummage' onChange= {handleChange} preventSwipe= {['up', 'down']} key= {roommie.name} >\n                //     <div className= 'roommieCard' onChange= {handleChange}  style= {{backgroundImage: `url(${roommie.url})`}}>\n\n                //         <h2>{roommie.name}</h2>\n                //         <h3>{roommie.major}</h3>\n                //         <p>{roommie.description}</p>\n                //     </div>\n\n                // </TinderCard>\n)))}\n         \n             </div>\n            \n             <Link to={\"/roommies/\" + roommie._id}>< MatchBtns /></Link>\n        </div>\n       \n        \n   \n    )\n   \n}\n\nexport default Cards; \n\n     \n     ","/Users/tajahjohnson/u-room/client/src/components/Header/Header.js",[],"/Users/tajahjohnson/u-room/client/src/utils/API.js",["72"],"import axios from \"axios\"; \n\nexport default {\n\n    getRoommies: function() {\n        return axios.get(\"/api/roommies\");\n    },\n\n    getRoommie: function(id) {\n        return axios.get(\"/api/roommies/\" + id);\n    }, \n\n    saveRoomie: function(roommieData) {\n        return axios.post(\"/api/roommies\", roommieData);\n    }\n};","/Users/tajahjohnson/u-room/client/src/components/MatchBtns/MatchBtns.js",[],"/Users/tajahjohnson/u-room/client/src/components/Messages/Messages.js",[],"/Users/tajahjohnson/u-room/client/src/components/Thread/Thread.js",["73"],"import React, { useEffect, useState}  from \"react\";\nimport { MDBCol} from 'mdbreact';\nimport API from '../../utils/API';\nimport \"./Thread.css\";\nimport { useParams } from \"react-router\";\n\nfunction Thread({message}) {\n    const [roommie, setRoommate] = useState({})\n   const {id} = useParams()\n   \n//    useEffect(() => {\n//     if (id) {\n//       API.getRoommie(id).then(data => setRoommate(data.data)).catch(err => console.log(err));\n//     }\n// }, [])\n    useEffect(() => {\n        \n        API.getRoommie(id)\n        .then(data => setRoommate(data.data))\n        .catch(err => console.log(err));\n        \n\n      }, [])\n\n    // function handleChange(event) {\n    //     const {key, style} = event.target;\n\n    //     setRoommate(roommie => {\n    //         return{\n    //             ...roommie,\n    //             [key]: style\n    //         }\n    //     })\n    // }\n    return (\n        <div>\n        {/* {roommie.map((roommie => ( */}\n\n        <div className=\"thread\">\n            <div className=\"row\">\n            <MDBCol mb=\"1\" md=\"1\" className=\"mb-3 text-center\">\n            <img src={roommie.url} className=\"rounded-circle\" alt={roommie.name} data-holder-rendered=\"true\"/>\n          </MDBCol></div>\n          <div className=\"row\">\n          <div className= \"convo_needs\">\n              <h3 className= \"name\">{roommie.name}</h3>\n              <p className= \"message\">{message}</p>\n          </div>\n         </div>\n\n        </div>\n\n    {/* ) */}\n    {/* )) */}\n{/* } */}\n  </div>\n    )\n}\n\nexport default Thread;","/Users/tajahjohnson/u-room/client/src/components/SignIn/SignIn.js",["74","75","76","77"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBCard,\n    MDBCardBody,\n    MDBModalFooter,\n    MDBIcon,\n    MDBCardHeader,\n    MDBBtn\n} from \"mdbreact\";\nimport \"./SignIn.css\";\nimport { auth } from \"../config/firebase\"; \n\n\nconst SignIn = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(null);\n    const signInWithEmailAndPasswordHandler = (event, email, password) => {\n        event.preventDefault();\n        auth.signInWithEmailAndPassword(email, password).catch(error => {\n          setError(\"Error signing in with password and email!\");\n          console.error(\"Error signing in with password and email\", error);\n        });\n      };\n\n    const onChangeHandler = (event) => {\n        const { name, value } = event.currentTarget;\n\n        if (name === \"userEmail\") {\n            setEmail(value);\n        }\n        else if (name === \"userPassword\") {\n            setPassword(value);\n        }\n    };\n\n    return (\n        <div>\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <MDBCard className=\"signInCard\">\n                            <MDBCardBody>\n                                <MDBCardHeader className=\"cardHeader\" className=\"form-header bg-dark rounded\" color=\"#263238\" >\n                                    <h3 className=\"my-3\">\n                                        <MDBIcon className=\"log\" icon=\"lock\" /> Login:\n                </h3>\n                                </MDBCardHeader>\n                                <label\n                                    htmlFor=\"defaultFormEmailEx\"\n                                    className=\"grey-text font-weight-light\" className=\"userEmail\"\n                                >\n                                    Email\n              </label>\n                                <input\n                                    type=\"email\"\n                                    id=\"defaultFormEmailEx\"\n                                    name=\"userEmail\"\n                                    value={email}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n\n                                <label\n                                    htmlFor=\"defaultFormPasswordEx\"\n                                    className=\"grey-text font-weight-light\"\n                                >\n                                    Password\n              </label>\n                                <input\n                                    type=\"password\"\n                                    id=\"defaultFormPasswordEx\"\n                                    name=\"userPassword\"\n                                    value={password}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n\n                                <div className=\"text-center mt-4\">\n                                    <Link to=\"/myprofile\">\n                                    <MDBBtn color=\"dark\" className=\"mb-3\" className=\"bg-dark\" type=\"submit\" onClick={(event) => { signInWithEmailAndPasswordHandler(event, email, password) }}>\n                                        Login\n                </MDBBtn></Link>\n                                </div>\n\n                                <MDBModalFooter>\n                                    <div className=\"font-weight-light\">\n                                        <p>Not a member?</p>\n                                        <Link to=\"/SignUp\" className=\"text-blue-500 hover:text-blue-600\">\n                                            Sign up here\n          </Link>\n\n                                    </div>\n                                </MDBModalFooter>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n\n\n        </div>\n    )\n}\n\nexport default SignIn;","/Users/tajahjohnson/u-room/client/src/components/SignUp/SignUp.js",["78","79","80","81","82"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBCard,\n    MDBCardBody,\n    MDBModalFooter,\n    MDBIcon,\n    MDBCardHeader,\n    MDBBtn\n} from \"mdbreact\";\nimport { auth, generateUserDocument } from \"../config/firebase\"; \n\nconst SignUp = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [major, setMajor] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [error, setError] = useState(null);\n\n    const createUserWithEmailAndPasswordHandler = async (event, email, password, major, description) => {\n        event.preventDefault();\n        try{\n          const {user} = await auth.createUserWithEmailAndPassword(email, password, major, description);\n          generateUserDocument(user, {name});\n        }\n        catch(error){\n          setError('Error Signing up with email and password');\n        }\n    \n        setEmail(\"\");\n        setPassword(\"\");\n        setName(\"\");\n        setMajor(\"\");\n        setDescription(\"\");\n      };\n    const onChangeHandler = event => {\n        const { name, value } = event.currentTarget;\n        if (name === \"userEmail\") {\n            setEmail(value);\n        } else if (name === \"userPassword\") {\n            setPassword(value);\n        } else if (name === \"name\") {\n            setName(value);\n        } else if (name === \"userMajor\") {\n            setMajor(value);\n        } else if (name === \"userDescription\"){\n            setDescription(value)\n        }\n    };\n    return (\n        <div>\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <MDBCard className=\"signUpCard\">\n                            <MDBCardBody>\n                                <MDBCardHeader className=\"cardHeader\" className=\"form-header bg-dark rounded\" color=\"#263238\" >\n                                    <h3 className=\"my-3\">\n                                        <MDBIcon className=\"log\" icon=\"lock\" /> Sign Up:\n                </h3>\n                                </MDBCardHeader>\n                                <label\n                                    htmlFor=\"defaultFormEmailEx\"\n                                    className=\"grey-text font-weight-light\" className=\"name\"\n                                >\n                                    Name\n              </label>\n                                <input\n                                    type=\"name\"\n                                    id=\"defaultFormEmailEx\"\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n                                <label\n                                    htmlFor=\"defaultFormEmailEx\"\n                                    className=\"grey-text font-weight-light\" className=\"userEmail\"\n                                >\n                                    Email\n              </label>\n                                <input\n                                    type=\"email\"\n                                    id=\"defaultFormEmailEx\"\n                                    name=\"userEmail\"\n                                    value={email}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n\n                                <label\n                                    htmlFor=\"defaultFormPasswordEx\"\n                                    className=\"grey-text font-weight-light\"\n                                >\n                                    Password\n              </label>\n                                <input\n                                    type=\"password\"\n                                    id=\"defaultFormPasswordEx\"\n                                    name=\"userPassword\"\n                                    value={password}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n\n<label\n                                    htmlFor=\"defaultFormPasswordEx\"\n                                    className=\"grey-text font-weight-light\"\n                                >\n                                    Major\n              </label>\n                                <input\n                                    type=\"major\"\n                                    id=\"defaultFormEmailEx\"\n                                    name=\"userMajor\"\n                                    value={major}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n                                 <label\n                                    htmlFor=\"defaultFormPasswordEx\"\n                                    className=\"grey-text font-weight-light\"\n                                >\n                                    Description\n              </label>\n                                <input\n                                    type=\"description\"\n                                    id=\"defaultFormEmailEx\"\n                                    name=\"userDescription\"\n                                    value={description}\n                                    onChange={(event) => onChangeHandler(event)}\n                                    className=\"form-control\"\n                                />\n\n                                <div className=\"text-center mt-4\">\n                                  <Link to=\"/myprofile\"><MDBBtn color=\"dark\" className=\"mb-3\" className=\"bg-dark\" type=\"submit\" onClick={(event) => { createUserWithEmailAndPasswordHandler(event, email, password) }}>\n                                        Login\n                </MDBBtn></Link> \n                                </div>\n\n                                <MDBModalFooter>\n                                    <div className=\"font-weight-light\">\n                                        <p>Already a member?{\"\"}</p>\n                                        <Link to=\"/profile\" className=\"text-blue-500 hover:text-blue-600\">\n                                            Sign in here!\n          </Link>\n\n                                    </div>\n                                </MDBModalFooter>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        </div>\n    )\n}\n\nexport default SignUp; \n","/Users/tajahjohnson/u-room/client/src/components/Profile/Profile.js",["83","84","85"],"import React,  {useContext, UserContext} from \"react\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBRow, MDBCol } from 'mdbreact';\nimport \"./Profile.css\";\nimport { auth } from \"../config/firebase\";\nimport { Link } from 'react-router-dom';\n\nconst Profile = () => {\n    const user = useContext(UserContext);\n    const { url, name, email, major, description } = user;\n    return (\n        <div>\n            <MDBRow>\n                <MDBCol className=\"profCard\" style={{ maxWidth: \"40rem\" }}>\n                    <MDBCard reverse>\n                        <MDBCardImage cascade className=\"img\" style={{ height: '20rem' }} src=\"https://atlantablackstar.com/wp-content/uploads/2016/08/malia-obama_ozv0ql.jpg\" />\n                        <MDBCardBody cascade className=\"text-center\">\n                            <MDBCardTitle>{name}</MDBCardTitle>\n                            <h5 className=\"indigo-text\"><strong>{major}</strong></h5>\n                            <MDBCardText>{description}</MDBCardText>\n                            <div className=\"text-center mt-4\">\n                                <Link to=\"/SignUp\">\n                                    <MDBBtn color=\"dark\" className=\"mb-3\" className=\"bg-dark\" type=\"submit\" onClick= {() => {auth.signOut()}}>\n                                        Sign Out\n                </MDBBtn></Link>\n                            </div>\n                        </MDBCardBody>\n                    </MDBCard>\n                </MDBCol>\n            </MDBRow>\n\n        </div>\n    )\n}\n\nexport default Profile;","/Users/tajahjohnson/u-room/client/src/providers/UserProvider.js",[],"/Users/tajahjohnson/u-room/client/src/components/config/firebase.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":14,"column":9,"nodeType":"92","messageId":"93","endLine":14,"endColumn":13},{"ruleId":"90","severity":1,"message":"94","line":5,"column":19,"nodeType":"92","messageId":"93","endLine":5,"endColumn":25},{"ruleId":"90","severity":1,"message":"95","line":5,"column":97,"nodeType":"92","messageId":"93","endLine":5,"endColumn":104},{"ruleId":"96","severity":1,"message":"97","line":57,"column":91,"nodeType":"98","endLine":57,"endColumn":115},{"ruleId":"99","severity":1,"message":"100","line":3,"column":1,"nodeType":"101","endLine":16,"endColumn":3},{"ruleId":"102","severity":1,"message":"103","line":23,"column":10,"nodeType":"104","endLine":23,"endColumn":12,"suggestions":"105"},{"ruleId":"90","severity":1,"message":"106","line":21,"column":12,"nodeType":"92","messageId":"93","endLine":21,"endColumn":17},{"ruleId":"96","severity":1,"message":"97","line":48,"column":71,"nodeType":"98","endLine":48,"endColumn":110},{"ruleId":"96","severity":1,"message":"97","line":55,"column":77,"nodeType":"98","endLine":55,"endColumn":98},{"ruleId":"96","severity":1,"message":"97","line":85,"column":75,"nodeType":"98","endLine":85,"endColumn":94},{"ruleId":"90","severity":1,"message":"106","line":22,"column":12,"nodeType":"92","messageId":"93","endLine":22,"endColumn":17},{"ruleId":"96","severity":1,"message":"97","line":61,"column":71,"nodeType":"98","endLine":61,"endColumn":110},{"ruleId":"96","severity":1,"message":"97","line":68,"column":77,"nodeType":"98","endLine":68,"endColumn":93},{"ruleId":"96","severity":1,"message":"97","line":82,"column":77,"nodeType":"98","endLine":82,"endColumn":98},{"ruleId":"96","severity":1,"message":"97","line":140,"column":95,"nodeType":"98","endLine":140,"endColumn":114},{"ruleId":"90","severity":1,"message":"107","line":9,"column":13,"nodeType":"92","messageId":"93","endLine":9,"endColumn":16},{"ruleId":"90","severity":1,"message":"108","line":9,"column":24,"nodeType":"92","messageId":"93","endLine":9,"endColumn":29},{"ruleId":"96","severity":1,"message":"97","line":22,"column":75,"nodeType":"98","endLine":22,"endColumn":94},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'MDBBtn' is defined but never used.","'MDBIcon' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'error' is assigned a value but never used.","'url' is assigned a value but never used.","'email' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [id]",{"range":"114","text":"115"},[617,619],"[id]"]